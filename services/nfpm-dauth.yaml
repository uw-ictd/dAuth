name: "dauth"
arch: "amd64"
platform: "linux"

# Upstream Version. (required)
# This will expand any env var you set in the field, eg version: v${SEMVER}
version: ${VERSION}

# Version Epoch.
# Default is extracted from `version` if it is semver compatible.
# epoch: 1

# Version Prerelease.
# Default is extracted from `version` if it is semver compatible.
# prerelease: beta1

# Version Metadata (previously deb.metadata).
# Default is extracted from `version` if it is semver compatible.
# Setting metadata might interfere with version comparisons depending on the packager.
# version_metadata: "git"

# Package Release Revision (Usually 1).
# This will expand any env var you set in the field, eg release: ${VERSION_RELEASE}
release: 1

section: "net"
priority: "optional"
maintainer: "Matthew Johnson <matt9j@cs.washington.edu>"
description: "A federated LTE authenticaion manager"
vendor: "UW-ICTD <colte@cs.washington.edu>"
homepage: "https://github.com/uw-ictd/dAuth"
license: "none"

# Changelog YAML file, see: https://github.com/goreleaser/chglog
#changelog: "changelog.yaml"

# Disables globbing for files, config_files, etc.
disable_globbing: true

# Packages it replaces. (overridable)
replaces:
  # - foobar

# Packages it provides. (overridable)
provides:
  # - bar

# Dependencies. (overridable)
depends:

# Recommended packages. (overridable)
recommends:
#  - fooa

# Suggested packages. (overridable)
suggests:
#  - foob

# Packages it conflicts with. (overridable)
conflicts:
#  - fooc

# Contents to add to the package
# This can be binaries or any other files.
contents:
  # Basic files that apply to all packagers
  - src: "./target/${TARGET}/dauth-service"
    dst: "/usr/bin/dauth-service"

  - src: "./dauth-service/init/dauth.service"
    dst: "/lib/systemd/system/dauth.service"

  # Config files
  - src: ./dauth-service/default-config.yaml
    dst: /etc/dauth/dauth.yaml
    type: config

  # Sometimes it is important to be able to set the mtime, mode, owner, or group for a file
  # that differs from what is on the local build system at build time.
  # - src: path/to/foo
  #   dst: /usr/local/foo
  #   file_info:
  #     mode: 0644
  #     mtime: 2008-01-02T15:04:05Z
  #     owner: notRoot
  #     group: notRoot

  - dst: "/var/lib/dauth"
    type: "dir"

# Scripts to run at specific stages. (overridable)
scripts:
  # preinstall: ./scripts/preinstall.sh
  postinstall: ./dauth-service/pkg/scripts/postinst.sh
  preremove: ./dauth-service/pkg/scripts/prerm.sh
  postremove: ./dauth-service/pkg/scripts/postrm.sh

# Custom configuration applied only to the Deb packager.
deb:
  # # Custom deb special files.
  # scripts:
  #   # Deb rules script.
  #   rules: foo.sh
  #   # Deb templates file, when using debconf.
  #   templates: templates

  # # Custom deb triggers
  # triggers:
  #   # register interrest on a trigger activated by another package
  #   # (also available: interest_await, interest_noawait)
  #   interest:
  #     - some-trigger-name
  #   # activate a trigger for another package
  #   # (also available: activate_await, activate_noawait)
  #   activate:
  #     - another-trigger-name

  # # The package is signed if a key_file is set
  # signature:
  #   # PGP secret key (can also be ASCII-armored). The passphrase is taken
  #   # from the environment variable $NFPM_DEB_PASSPHRASE with a fallback
  #   # to #NFPM_PASSPHRASE.
  #   # This will expand any env var you set in the field, eg key_file: ${SIGNING_KEY_FILE}
  #   key_file: key.gpg
  #   # The type describes the signers role, possible values are "origin",
  #   # "maint" and "archive". If unset, the type defaults to "origin".
  #   type: origin
