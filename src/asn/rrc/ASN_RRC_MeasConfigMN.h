/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-InterNodeDefinitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_ASN_RRC_MeasConfigMN_H_
#define	_ASN_RRC_MeasConfigMN_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ASN_RRC_MeasConfigMN__gapPurpose {
	ASN_RRC_MeasConfigMN__gapPurpose_perUE	= 0,
	ASN_RRC_MeasConfigMN__gapPurpose_perFR1	= 1
} e_ASN_RRC_MeasConfigMN__gapPurpose;

/* Forward declarations */
struct ASN_RRC_SetupRelease_GapConfig;
struct ASN_RRC_NR_FreqInfo;

/* ASN_RRC_MeasConfigMN */
typedef struct ASN_RRC_MeasConfigMN {
	struct ASN_RRC_MeasConfigMN__measuredFrequenciesMN {
		A_SEQUENCE_OF(struct ASN_RRC_NR_FreqInfo) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *measuredFrequenciesMN;
	struct ASN_RRC_SetupRelease_GapConfig	*measGapConfig;	/* OPTIONAL */
	long	*gapPurpose;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct ASN_RRC_MeasConfigMN__ext1 {
		struct ASN_RRC_SetupRelease_GapConfig	*measGapConfigFR2;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ASN_RRC_MeasConfigMN_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_gapPurpose_5;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_MeasConfigMN;
extern asn_SEQUENCE_specifics_t asn_SPC_ASN_RRC_MeasConfigMN_specs_1;
extern asn_TYPE_member_t asn_MBR_ASN_RRC_MeasConfigMN_1[4];

#ifdef __cplusplus
}
#endif

#endif	/* _ASN_RRC_MeasConfigMN_H_ */
#include <asn_internal.h>
