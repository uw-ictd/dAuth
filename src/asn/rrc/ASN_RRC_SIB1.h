/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_ASN_RRC_SIB1_H_
#define	_ASN_RRC_SIB1_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ASN_RRC_CellAccessRelatedInfo.h"
#include <NativeEnumerated.h>
#include <OCTET_STRING.h>
#include "ASN_RRC_Q-RxLevMin.h"
#include <NativeInteger.h>
#include "ASN_RRC_Q-QualMin.h"
#include <constr_SEQUENCE.h>
#include "ASN_RRC_UAC-BarringInfoSetList.h"
#include "ASN_RRC_UAC-AccessCategory1-SelectionAssistanceInfo.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ASN_RRC_SIB1__ims_EmergencySupport {
	ASN_RRC_SIB1__ims_EmergencySupport_true	= 0
} e_ASN_RRC_SIB1__ims_EmergencySupport;
typedef enum ASN_RRC_SIB1__eCallOverIMS_Support {
	ASN_RRC_SIB1__eCallOverIMS_Support_true	= 0
} e_ASN_RRC_SIB1__eCallOverIMS_Support;
typedef enum ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR {
	ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR_NOTHING,	/* No components present */
	ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR_plmnCommon,
	ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR_individualPLMNList
} ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR;
typedef enum ASN_RRC_SIB1__useFullResumeID {
	ASN_RRC_SIB1__useFullResumeID_true	= 0
} e_ASN_RRC_SIB1__useFullResumeID;

/* Forward declarations */
struct ASN_RRC_ConnEstFailureControl;
struct ASN_RRC_SI_SchedulingInfo;
struct ASN_RRC_ServingCellConfigCommonSIB;
struct ASN_RRC_UE_TimersAndConstants;
struct ASN_RRC_UAC_BarringPerCatList;
struct ASN_RRC_UAC_BarringPerPLMN_List;

/* ASN_RRC_SIB1 */
typedef struct ASN_RRC_SIB1 {
	struct ASN_RRC_SIB1__cellSelectionInfo {
		ASN_RRC_Q_RxLevMin_t	 q_RxLevMin;
		long	*q_RxLevMinOffset;	/* OPTIONAL */
		ASN_RRC_Q_RxLevMin_t	*q_RxLevMinSUL;	/* OPTIONAL */
		ASN_RRC_Q_QualMin_t	*q_QualMin;	/* OPTIONAL */
		long	*q_QualMinOffset;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *cellSelectionInfo;
	ASN_RRC_CellAccessRelatedInfo_t	 cellAccessRelatedInfo;
	struct ASN_RRC_ConnEstFailureControl	*connEstFailureControl;	/* OPTIONAL */
	struct ASN_RRC_SI_SchedulingInfo	*si_SchedulingInfo;	/* OPTIONAL */
	struct ASN_RRC_ServingCellConfigCommonSIB	*servingCellConfigCommon;	/* OPTIONAL */
	long	*ims_EmergencySupport;	/* OPTIONAL */
	long	*eCallOverIMS_Support;	/* OPTIONAL */
	struct ASN_RRC_UE_TimersAndConstants	*ue_TimersAndConstants;	/* OPTIONAL */
	struct ASN_RRC_SIB1__uac_BarringInfo {
		struct ASN_RRC_UAC_BarringPerCatList	*uac_BarringForCommon;	/* OPTIONAL */
		struct ASN_RRC_UAC_BarringPerPLMN_List	*uac_BarringPerPLMN_List;	/* OPTIONAL */
		ASN_RRC_UAC_BarringInfoSetList_t	 uac_BarringInfoSetList;
		struct ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo {
			ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo_PR present;
			union ASN_RRC_SIB1__ASN_RRC_uac_BarringInfo__ASN_RRC_uac_AccessCategory1_SelectionAssistanceInfo_u {
				ASN_RRC_UAC_AccessCategory1_SelectionAssistanceInfo_t	 plmnCommon;
				struct ASN_RRC_SIB1__uac_BarringInfo__uac_AccessCategory1_SelectionAssistanceInfo__individualPLMNList {
					A_SEQUENCE_OF(ASN_RRC_UAC_AccessCategory1_SelectionAssistanceInfo_t) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} *individualPLMNList;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *uac_AccessCategory1_SelectionAssistanceInfo;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *uac_BarringInfo;
	long	*useFullResumeID;	/* OPTIONAL */
	OCTET_STRING_t	*lateNonCriticalExtension;	/* OPTIONAL */
	struct ASN_RRC_SIB1__nonCriticalExtension {
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *nonCriticalExtension;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ASN_RRC_SIB1_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_ims_EmergencySupport_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_eCallOverIMS_Support_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_useFullResumeID_25;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_SIB1;
extern asn_SEQUENCE_specifics_t asn_SPC_ASN_RRC_SIB1_specs_1;
extern asn_TYPE_member_t asn_MBR_ASN_RRC_SIB1_1[12];

#ifdef __cplusplus
}
#endif

#endif	/* _ASN_RRC_SIB1_H_ */
#include <asn_internal.h>
