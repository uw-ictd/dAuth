/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_ASN_RRC_CodebookParameters_H_
#define	_ASN_RRC_CodebookParameters_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <NativeInteger.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ASN_RRC_CodebookParameters__type1__singlePanel__modes {
	ASN_RRC_CodebookParameters__type1__singlePanel__modes_mode1	= 0,
	ASN_RRC_CodebookParameters__type1__singlePanel__modes_mode1andMode2	= 1
} e_ASN_RRC_CodebookParameters__type1__singlePanel__modes;
typedef enum ASN_RRC_CodebookParameters__type1__multiPanel__modes {
	ASN_RRC_CodebookParameters__type1__multiPanel__modes_mode1	= 0,
	ASN_RRC_CodebookParameters__type1__multiPanel__modes_mode2	= 1,
	ASN_RRC_CodebookParameters__type1__multiPanel__modes_both	= 2
} e_ASN_RRC_CodebookParameters__type1__multiPanel__modes;
typedef enum ASN_RRC_CodebookParameters__type1__multiPanel__nrofPanels {
	ASN_RRC_CodebookParameters__type1__multiPanel__nrofPanels_n2	= 0,
	ASN_RRC_CodebookParameters__type1__multiPanel__nrofPanels_n4	= 1
} e_ASN_RRC_CodebookParameters__type1__multiPanel__nrofPanels;
typedef enum ASN_RRC_CodebookParameters__type2__amplitudeScalingType {
	ASN_RRC_CodebookParameters__type2__amplitudeScalingType_wideband	= 0,
	ASN_RRC_CodebookParameters__type2__amplitudeScalingType_widebandAndSubband	= 1
} e_ASN_RRC_CodebookParameters__type2__amplitudeScalingType;
typedef enum ASN_RRC_CodebookParameters__type2__amplitudeSubsetRestriction {
	ASN_RRC_CodebookParameters__type2__amplitudeSubsetRestriction_supported	= 0
} e_ASN_RRC_CodebookParameters__type2__amplitudeSubsetRestriction;
typedef enum ASN_RRC_CodebookParameters__type2_PortSelection__amplitudeScalingType {
	ASN_RRC_CodebookParameters__type2_PortSelection__amplitudeScalingType_wideband	= 0,
	ASN_RRC_CodebookParameters__type2_PortSelection__amplitudeScalingType_widebandAndSubband	= 1
} e_ASN_RRC_CodebookParameters__type2_PortSelection__amplitudeScalingType;

/* Forward declarations */
struct ASN_RRC_SupportedCSI_RS_Resource;

/* ASN_RRC_CodebookParameters */
typedef struct ASN_RRC_CodebookParameters {
	struct ASN_RRC_CodebookParameters__type1 {
		struct ASN_RRC_CodebookParameters__type1__singlePanel {
			struct ASN_RRC_CodebookParameters__type1__singlePanel__supportedCSI_RS_ResourceList {
				A_SEQUENCE_OF(struct ASN_RRC_SupportedCSI_RS_Resource) list;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} supportedCSI_RS_ResourceList;
			long	 modes;
			long	 maxNumberCSI_RS_PerResourceSet;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} singlePanel;
		struct ASN_RRC_CodebookParameters__type1__multiPanel {
			struct ASN_RRC_CodebookParameters__type1__multiPanel__supportedCSI_RS_ResourceList {
				A_SEQUENCE_OF(struct ASN_RRC_SupportedCSI_RS_Resource) list;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} supportedCSI_RS_ResourceList;
			long	 modes;
			long	 nrofPanels;
			long	 maxNumberCSI_RS_PerResourceSet;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *multiPanel;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} type1;
	struct ASN_RRC_CodebookParameters__type2 {
		struct ASN_RRC_CodebookParameters__type2__supportedCSI_RS_ResourceList {
			A_SEQUENCE_OF(struct ASN_RRC_SupportedCSI_RS_Resource) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} supportedCSI_RS_ResourceList;
		long	 parameterLx;
		long	 amplitudeScalingType;
		long	*amplitudeSubsetRestriction;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *type2;
	struct ASN_RRC_CodebookParameters__type2_PortSelection {
		struct ASN_RRC_CodebookParameters__type2_PortSelection__supportedCSI_RS_ResourceList {
			A_SEQUENCE_OF(struct ASN_RRC_SupportedCSI_RS_Resource) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} supportedCSI_RS_ResourceList;
		long	 parameterLx;
		long	 amplitudeScalingType;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *type2_PortSelection;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ASN_RRC_CodebookParameters_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_modes_6;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_modes_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_nrofPanels_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_amplitudeScalingType_25;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_amplitudeSubsetRestriction_28;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_amplitudeScalingType_34;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_CodebookParameters;
extern asn_SEQUENCE_specifics_t asn_SPC_ASN_RRC_CodebookParameters_specs_1;
extern asn_TYPE_member_t asn_MBR_ASN_RRC_CodebookParameters_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _ASN_RRC_CodebookParameters_H_ */
#include <asn_internal.h>
