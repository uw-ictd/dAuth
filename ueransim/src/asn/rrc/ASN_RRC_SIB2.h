/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_ASN_RRC_SIB2_H_
#define	_ASN_RRC_SIB2_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include "ASN_RRC_RangeToBestCell.h"
#include <NativeEnumerated.h>
#include "ASN_RRC_MobilityStateParameters.h"
#include <constr_SEQUENCE.h>
#include "ASN_RRC_ReselectionThreshold.h"
#include "ASN_RRC_ReselectionThresholdQ.h"
#include "ASN_RRC_CellReselectionPriority.h"
#include "ASN_RRC_CellReselectionSubPriority.h"
#include "ASN_RRC_Q-RxLevMin.h"
#include "ASN_RRC_Q-QualMin.h"
#include "ASN_RRC_T-Reselection.h"
#include "ASN_RRC_P-Max.h"
#include <BOOLEAN.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst {
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB0	= 0,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB1	= 1,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB2	= 2,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB3	= 3,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB4	= 4,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB5	= 5,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB6	= 6,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB8	= 7,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB10	= 8,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB12	= 9,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB14	= 10,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB16	= 11,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB18	= 12,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB20	= 13,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB22	= 14,
	ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst_dB24	= 15
} e_ASN_RRC_SIB2__cellReselectionInfoCommon__q_Hyst;
typedef enum ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium {
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium_dB_6	= 0,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium_dB_4	= 1,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium_dB_2	= 2,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium_dB0	= 3
} e_ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_Medium;
typedef enum ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High {
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High_dB_6	= 0,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High_dB_4	= 1,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High_dB_2	= 2,
	ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High_dB0	= 3
} e_ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF__sf_High;

/* Forward declarations */
struct ASN_RRC_ThresholdNR;
struct ASN_RRC_MultiFrequencyBandListNR_SIB;
struct ASN_RRC_SSB_MTC;
struct ASN_RRC_SS_RSSI_Measurement;
struct ASN_RRC_SSB_ToMeasure;
struct ASN_RRC_SpeedStateScaleFactors;

/* ASN_RRC_SIB2 */
typedef struct ASN_RRC_SIB2 {
	struct ASN_RRC_SIB2__cellReselectionInfoCommon {
		long	*nrofSS_BlocksToAverage;	/* OPTIONAL */
		struct ASN_RRC_ThresholdNR	*absThreshSS_BlocksConsolidation;	/* OPTIONAL */
		ASN_RRC_RangeToBestCell_t	*rangeToBestCell;	/* OPTIONAL */
		long	 q_Hyst;
		struct ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars {
			ASN_RRC_MobilityStateParameters_t	 mobilityStateParameters;
			struct ASN_RRC_SIB2__cellReselectionInfoCommon__speedStateReselectionPars__q_HystSF {
				long	 sf_Medium;
				long	 sf_High;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} q_HystSF;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *speedStateReselectionPars;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} cellReselectionInfoCommon;
	struct ASN_RRC_SIB2__cellReselectionServingFreqInfo {
		ASN_RRC_ReselectionThreshold_t	*s_NonIntraSearchP;	/* OPTIONAL */
		ASN_RRC_ReselectionThresholdQ_t	*s_NonIntraSearchQ;	/* OPTIONAL */
		ASN_RRC_ReselectionThreshold_t	 threshServingLowP;
		ASN_RRC_ReselectionThresholdQ_t	*threshServingLowQ;	/* OPTIONAL */
		ASN_RRC_CellReselectionPriority_t	 cellReselectionPriority;
		ASN_RRC_CellReselectionSubPriority_t	*cellReselectionSubPriority;	/* OPTIONAL */
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} cellReselectionServingFreqInfo;
	struct ASN_RRC_SIB2__intraFreqCellReselectionInfo {
		ASN_RRC_Q_RxLevMin_t	 q_RxLevMin;
		ASN_RRC_Q_RxLevMin_t	*q_RxLevMinSUL;	/* OPTIONAL */
		ASN_RRC_Q_QualMin_t	*q_QualMin;	/* OPTIONAL */
		ASN_RRC_ReselectionThreshold_t	 s_IntraSearchP;
		ASN_RRC_ReselectionThresholdQ_t	*s_IntraSearchQ;	/* OPTIONAL */
		ASN_RRC_T_Reselection_t	 t_ReselectionNR;
		struct ASN_RRC_MultiFrequencyBandListNR_SIB	*frequencyBandList;	/* OPTIONAL */
		struct ASN_RRC_MultiFrequencyBandListNR_SIB	*frequencyBandListSUL;	/* OPTIONAL */
		ASN_RRC_P_Max_t	*p_Max;	/* OPTIONAL */
		struct ASN_RRC_SSB_MTC	*smtc;	/* OPTIONAL */
		struct ASN_RRC_SS_RSSI_Measurement	*ss_RSSI_Measurement;	/* OPTIONAL */
		struct ASN_RRC_SSB_ToMeasure	*ssb_ToMeasure;	/* OPTIONAL */
		BOOLEAN_t	 deriveSSB_IndexFromCell;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		struct ASN_RRC_SIB2__intraFreqCellReselectionInfo__ext1 {
			struct ASN_RRC_SpeedStateScaleFactors	*t_ReselectionNR_SF;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *ext1;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} intraFreqCellReselectionInfo;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ASN_RRC_SIB2_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_q_Hyst_6;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_sf_Medium_26;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_sf_High_31;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ASN_RRC_SIB2;
extern asn_SEQUENCE_specifics_t asn_SPC_ASN_RRC_SIB2_specs_1;
extern asn_TYPE_member_t asn_MBR_ASN_RRC_SIB2_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _ASN_RRC_SIB2_H_ */
#include <asn_internal.h>
